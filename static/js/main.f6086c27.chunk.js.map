{"version":3,"sources":["actions/types.ts","api/Api.ts","api/ProteinSequenceApi.ts","actions/Sequence/SequenceActions.ts","components/Navbar/Navbar.tsx","components/Transcript/TranscriptContainer.tsx","components/InputContainer/InputContainer.tsx","actions/Transcript/TranscriptActions.ts","App.tsx","reportWebVitals.js","reducers/Sequence/SequenceReducers.ts","reducers/Transcript/TranscriptReducers.ts","reducers/index.ts","configureStore.ts","index.js"],"names":["ActionTypes","axios","defaults","baseURL","fetchTranscript","gene","Api","get","headers","fetchSequence","seqIds","dispatch","requests","_fetchCodingPolicies","seqId","api","then","response","data","i","length","push","type","FETCH_SEQUENCE","payload","Promise","all","Navbar","useSelector","state","sequence","exact","activeClassName","to","TranscriptContainer","props","seq","ids","filter","x","charAt","position","letter","transcript","useState","pageNumber","setPageNumber","transcriptNumber","currentPageNumber","useEffect","handlePrev","handleNext","Transcript","el","find","element","id","paginatedTranscripts","splice","listItems","map","item","className","assembly_name","version","display_name","species","Parent","start","end","strand","source","biotype","logic_name","seq_region_name","is_canonical","onClick","disabled","error","loading","InputContainer","useDispatch","setGene","setPosition","setLetter","positionLeft","parseInt","transcriptIds","isDisabled","placeholder","onChange","e","target","value","FETCH_TRANSCRIPT","path","render","toString","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","sequenceReducer","action","FETCH_SEQUENCE_PENDING","FETCH_SEQUENCE_FULFILLED","concat","FETCH_SEQUENCE_REJECTED","transcriptReducer","FETCH_TRANSCRIPT_PENDING","FETCH_TRANSCRIPT_FULFILLED","FETCH_TRANSCRIPT_REJECTED","rootReducer","combineReducers","middlewares","reduxThunk","reduxPromiseMiddleware","store","preloadedState","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","createRootReducer","applyMiddleware","configureStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f6086c27.chunk.js","sourcesContent":["export enum ActionTypes {\r\n  FETCH_TRANSCRIPT = 'FETCH_TRANSCRIPT',\r\n  FETCH_TRANSCRIPT_PENDING = 'FETCH_TRANSCRIPT_PENDING',\r\n  FETCH_TRANSCRIPT_FULFILLED = 'FETCH_TRANSCRIPT_FULFILLED',\r\n  FETCH_TRANSCRIPT_REJECTED = 'FETCH_TRANSCRIPT_REJECTED',\r\n  FETCH_SEQUENCE = 'FETCH_SEQUENCE',\r\n  FETCH_SEQUENCE_PENDING = 'FETCH_SEQUENCE_PENDING',\r\n  FETCH_SEQUENCE_FULFILLED = 'FETCH_SEQUENCE_FULFILLED',\r\n  FETCH_SEQUENCE_REJECTED = 'FETCH_SEQUENCE_REJECTED'\r\n}","import axios from 'axios';\r\n\r\nexport let baseUrl = 'http://rest.ensembl.org';\r\n\r\naxios.defaults.baseURL = baseUrl;\r\n\r\nexport default axios;","import Api from './Api';\r\n\r\nexport const fetchSequence = (seqId: string) => {\r\n  return Api.get(`/sequence/id/${seqId}`, {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n};\r\n\r\nexport const fetchTranscript = (gene: string) => {\r\n  return Api.get(`lookup/symbol/homo_sapiens/${gene}?expand=1`, {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n};","import { Dispatch } from 'redux';\r\nimport { AppThunk } from '../../configureStore';\r\nimport { ActionTypes } from '../types';\r\nimport * as api from '../../api/ProteinSequenceApi';\r\nimport { Action } from 'redux';\r\n\r\nexport const fetchSequence = (seqIds: string[]): AppThunk => {\r\n  return (dispatch: Dispatch) => {\r\n    const requests = [];\r\n    const _fetchCodingPolicies = (seqId: string) => {\r\n      return api.fetchSequence(\r\n        seqId\r\n      ).then(response => {\r\n        return response.data;\r\n      });\r\n    };\r\n\r\n    for (let i=0; i< seqIds.length;i++) {\r\n      requests.push(_fetchCodingPolicies(seqIds[i]));\r\n    }\r\n\r\n    return dispatch({\r\n      type: ActionTypes.FETCH_SEQUENCE,\r\n      payload: Promise.all(requests)\r\n    });\r\n  };\r\n};\r\n\r\nexport interface FetchSequenceFulfilledAction extends Action<ActionTypes.FETCH_SEQUENCE_FULFILLED> {\r\n  readonly payload: any;\r\n}\r\nexport type FetchSequenceRejectedAction = Action<ActionTypes.FETCH_SEQUENCE_REJECTED>;\r\nexport type FetchSequencePendingAction = Action<ActionTypes.FETCH_SEQUENCE_PENDING>;\r\n\r\nexport type FetchSequenceAction =\r\n  | FetchSequencePendingAction\r\n  | FetchSequenceRejectedAction\r\n  | FetchSequenceFulfilledAction;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {  NavLink } from 'react-router-dom';\r\nimport { StoreState } from '../../reducers';\r\n\r\nimport './Navbar.scss'\r\n\r\nconst Navbar= () =>{\r\n  const sequence = useSelector((state: StoreState) => state.sequence);\r\n\r\n  return (\r\n    sequence.data.length ? (\r\n  <nav>\r\n  <ul>\r\n    <li>\r\n      <NavLink exact activeClassName=\"active\" to=\"/\">\r\n        Transcripts\r\n      </NavLink>\r\n    </li>\r\n    <li>\r\n      <NavLink exact activeClassName=\"active\" to=\"/TranscriptContainer\">\r\n        Transcripts from 10 Left\r\n      </NavLink>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n    ) : <></> \r\n  );\r\n}\r\nexport default Navbar;","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Transcript } from '../../models/Transcript';\r\nimport { StoreState } from '../../reducers';\r\n\r\nimport './TranscriptCotainer.scss';\r\n\r\nexport type TranscriptContainerProps = {\r\n  position: string;\r\n  letter: string;\r\n  pageNumber: number;\r\n};\r\n\r\nexport const TranscriptContainer = (props: any) => {\r\n  const seq = useSelector((state: StoreState) => state.sequence);\r\n  const ids = seq.data?.filter((x: { seq: { charAt: (arg0: string) => string; }; })=>x.seq.charAt(props.position) === props.letter);\r\n\r\n  const transcript = useSelector((state: StoreState) => state.transcript);\r\n\r\n  const [pageNumber, setPageNumber]= useState(1);\r\n  const [transcriptNumber]= useState(1);\r\n\r\n  const currentPageNumber = (pageNumber * transcriptNumber) - 1;\r\n\r\n  useEffect(()=>{\r\n      setPageNumber(1);\r\n  },[props])\r\n\r\n  const handlePrev =()=>{\r\n      if(pageNumber === 1) return\r\n      setPageNumber(pageNumber - 1)\r\n  }\r\n  const handleNext =()=>{\r\n      setPageNumber(pageNumber + 1)\r\n  }\r\n\r\n  const data = transcript.data.Transcript?.filter((el: { id: any; }) => {\r\n    return ids.find((element: { id: any; }) => {\r\n       return element.id === el.id;\r\n    });\r\n });\r\n\r\n const paginatedTranscripts = data?.splice(currentPageNumber, transcriptNumber);\r\n\r\n const listItems = paginatedTranscripts?.map((item: Transcript) =>\r\n <div className='transcript' key={item.id}>\r\n  <h4>Transcripts for letter {props.letter} at position {props.position}</h4>\r\n  <li>ID: {item.id}</li>\r\n  <li>Assembly Name: {item.assembly_name}</li>\r\n  <li>Version: {item.version}</li>\r\n  <li>Display Name: {item.display_name}</li>\r\n  <li>Species: {item.species}</li>\r\n  <li>Parent: {item.Parent}</li>\r\n  <li>Start: {item.start}</li>\r\n  <li>End: {item.end}</li>\r\n  <li>Strand: {item.strand}</li>\r\n  <li>Source: {item.source}</li>\r\n  <li>Bio Type: {item.biotype}</li>\r\n  <li>Logic Name: {item.logic_name}</li>\r\n  <li>Sequence Region Name: {item.seq_region_name}</li>\r\n  <li>Is Canonical: {item.is_canonical}</li>\r\n  <hr/>\r\n  <div>Page {pageNumber} </div>\r\n    <div className='pagination'>\r\n      <button onClick={handlePrev} disabled={pageNumber===1}>prev</button>\r\n        <button onClick={handleNext} disabled={pageNumber===data?.length+1}>next</button>\r\n    </div>\r\n</div>\r\n);\r\n  \r\n  return (\r\n    transcript.error || seq.error ? <p className='text-center'>Failed to load transcripts. Please tray again.</p> :\r\n    transcript.loading || seq.loading ? \r\n      <p className='text-center'>Loading...</p> : \r\n        data?.length === 0 ? \r\n          <p className='text-center'>No data available.</p> :\r\n            <>\r\n            {listItems}\r\n            </>\r\n  );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { fetchSequence } from \"../../actions/Sequence/SequenceActions\";\r\nimport { fetchTranscript } from \"../../actions/Transcript/TranscriptActions\";\r\nimport { StoreState } from \"../../reducers\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport { TranscriptContainer } from \"../Transcript/TranscriptContainer\";\r\n\r\nimport './InputContainer.scss';\r\n\r\n export const InputContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const [gene, setGene] = useState('');\r\n    const [position, setPosition] = useState('');\r\n    const [letter, setLetter] = useState('');\r\n    const positionLeft = parseInt(position) - 10;\r\n    const transcript = useSelector((state: StoreState) => state.transcript);\r\n    const transcriptIds = transcript.data?.Transcript?.map((x: { id: any; })=>x.id);\r\n    const seq = useSelector((state: StoreState) => state.sequence);\r\n\r\n    const handleClick = () => {\r\n      dispatch(fetchTranscript(gene));\r\n    }\r\n\r\n    useEffect(()=>{\r\n      transcriptIds?.length > 0 && dispatch(fetchSequence(transcriptIds));\r\n     // eslint-disable-next-line \r\n    },[transcriptIds?.length]);\r\n\r\n    const isDisabled = gene.length === 0 || position.length === 0 || letter.length ===0 || seq.loading || transcript.loading;\r\n\r\n    return (\r\n      <>\r\n        <div className='inputContainer'>\r\n          <input type=\"text\" placeholder=\"Gene Symbol\" onChange={e => setGene(e.target.value)} />\r\n          <input type=\"number\" placeholder=\"Position\" onChange={e => setPosition(e.target.value)} />\r\n          <input type=\"text\" placeholder=\"Letter\" onChange={e => setLetter(e.target.value)} />\r\n          <input type=\"button\" onClick={handleClick} value='Get Transcripts' disabled={isDisabled} />\r\n        </div>\r\n        <Router>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route\r\n                exact\r\n                path=\"/\"\r\n                render={props => (\r\n                  <TranscriptContainer {...props} position={position} letter={letter} />\r\n                )}\r\n              />\r\n            <Route\r\n                exact\r\n                path=\"/TranscriptContainer\"\r\n                render={props => (\r\n                  <TranscriptContainer {...props} position={positionLeft.toString()} letter={letter} />\r\n                )}\r\n              />\r\n          </Switch>\r\n        </Router>\r\n      </>\r\n    );\r\n};\r\n\r\n\r\n","import { Dispatch } from 'redux';\r\nimport { AppThunk } from '../../configureStore';\r\nimport { ActionTypes } from '../types';\r\nimport * as api from '../../api/ProteinSequenceApi';\r\nimport { AxiosResponse } from 'axios';\r\nimport { Action } from 'redux';\r\n\r\nexport const fetchTranscript = (gene: string): AppThunk => {\r\n  return (dispatch: Dispatch) => {\r\n    return dispatch({\r\n      type: ActionTypes.FETCH_TRANSCRIPT,\r\n      payload: api.fetchTranscript(gene)\r\n    });\r\n  };\r\n};\r\n\r\nexport interface FetchTranscriptFulfilledAction extends Action<ActionTypes.FETCH_TRANSCRIPT_FULFILLED> {\r\n  readonly payload: AxiosResponse;\r\n}\r\nexport type FetchTranscriptRejectedAction = Action<ActionTypes.FETCH_TRANSCRIPT_REJECTED>;\r\nexport type FetchTranscriptPendingAction = Action<ActionTypes.FETCH_TRANSCRIPT_PENDING>;\r\n\r\nexport type FetchTranscriptAction =\r\n  | FetchTranscriptPendingAction\r\n  | FetchTranscriptRejectedAction\r\n  | FetchTranscriptFulfilledAction;","import React from \"react\";\n\nimport './App.css';\nimport { InputContainer } from \"./components/InputContainer/InputContainer\";\n\n export const App = () => {\n    return (\n      <InputContainer/>\n    );\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Action } from '../../actions';\r\nimport { ActionTypes } from '../../actions/types';\r\n\r\nexport interface SequenceState {\r\n  data: any;\r\n  loading: boolean;\r\n  error: boolean;\r\n}\r\n\r\nconst initialState: SequenceState = {\r\n  data: [],\r\n  loading: false,\r\n  error: false,\r\n};\r\n\r\nexport const sequenceReducer = (state = initialState, action: Action): SequenceState => {\r\n  switch (action.type) {\r\n    case ActionTypes.FETCH_SEQUENCE_PENDING:\r\n      return {\r\n        ...state,\r\n        data: [],\r\n        loading: true,\r\n        error: false,\r\n      };\r\n    case ActionTypes.FETCH_SEQUENCE_FULFILLED:\r\n      return {\r\n        ...state,\r\n        data: [].concat(...action.payload),\r\n        loading: false,\r\n        error: false,\r\n      };\r\n    case ActionTypes.FETCH_SEQUENCE_REJECTED:\r\n      return {\r\n        ...state,\r\n        data: [],\r\n        loading: false,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { Action } from '../../actions';\r\nimport { ActionTypes } from '../../actions/types';\r\n\r\nexport interface TranscriptState {\r\n  data: any;\r\n  loading: boolean;\r\n  error: boolean;\r\n}\r\n\r\nconst initialState: TranscriptState = {\r\n  data: [],\r\n  loading: false,\r\n  error: false,\r\n};\r\n\r\nexport const transcriptReducer = (state = initialState, action: Action): TranscriptState => {\r\n  switch (action.type) {\r\n    case ActionTypes.FETCH_TRANSCRIPT_PENDING:\r\n      return {\r\n        ...state,\r\n        data: [],\r\n        loading: true,\r\n        error: false,\r\n      };\r\n    case ActionTypes.FETCH_TRANSCRIPT_FULFILLED:\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n        loading: false,\r\n        error: false,\r\n      };\r\n    case ActionTypes.FETCH_TRANSCRIPT_REJECTED:\r\n      return {\r\n        ...state,\r\n        data: [],\r\n        loading: false,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { combineReducers, Reducer } from 'redux';\r\nimport { SequenceState, sequenceReducer } from './Sequence/SequenceReducers';\r\nimport { TranscriptState, transcriptReducer } from './Transcript/TranscriptReducers';\r\n\r\nexport interface StoreState {\r\n  sequence: SequenceState;\r\n  transcript: TranscriptState\r\n}\r\n\r\nconst rootReducer = (): Reducer<StoreState> => combineReducers<StoreState>({\r\n  sequence: sequenceReducer,\r\n  transcript: transcriptReducer\r\n});\r\n\r\nexport default rootReducer;","import {\r\n  AnyAction,\r\n  applyMiddleware, compose, createStore, Store\r\n} from 'redux';\r\nimport reduxThunk, { ThunkAction } from 'redux-thunk';\r\nimport reduxPromiseMiddleware from 'redux-promise-middleware';\r\nimport createRootReducer, { StoreState } from './reducers';\r\n\r\nexport const middlewares = [reduxThunk, reduxPromiseMiddleware];\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, StoreState, unknown, AnyAction>;\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nexport default function configureStore (preloadedState: any): Store<StoreState> {\r\n  const composeEnhancer: typeof compose = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(\r\n    createRootReducer(),\r\n    preloadedState,\r\n    composeEnhancer(\r\n      applyMiddleware(\r\n        ...middlewares\r\n      ),\r\n    ),\r\n  );\r\n\r\n  return store;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport configureStore from './configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}